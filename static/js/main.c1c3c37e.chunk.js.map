{"version":3,"sources":["components/GObjects/GCube/GCube.module.css","components/GObjects/GCube/GCubeAnimation.module.css","components/GObjects/GTetrahedron/GTetrahedron.module.css","components/GObjects/GTetrahedron/GTetrahedronAnimation.module.css","components/uiKit/UMenu/UMenu.module.css","components/GObjects/GCube/GCube.jsx","components/GObjects/GTetrahedron/GTetrahedron.jsx","components/uiKit/UMenu/UMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","GCube","pageX","pageY","animation","className","c","style","transform","classnames","side","front","a","back","right","left","top","bottom","GTetrahedron","UMenu","models","onSelected","onAnimateButtonPress","items","map","item","i","onClick","lable","UMenu_container","settings","animationTrue","App","state","key","lastX","lastY","display","_onKeyDown","setState","_onKeyUp","_mouveCube","e","window","onmousemove","this","onmousedown","onmouseup","id","_onAnimateButtonPress","_onModelSelected","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1c3c37e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GCube\":\"GCube_GCube__5bL9s\",\"side\":\"GCube_side__1MM3W\",\"front\":\"GCube_front__wZFcq\",\"back\":\"GCube_back__14Xum\",\"right\":\"GCube_right__FqFME\",\"left\":\"GCube_left__36Cw4\",\"top\":\"GCube_top__1UFM4\",\"bottom\":\"GCube_bottom__1qqB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animation\":\"GCubeAnimation_animation__18yo_\",\"front\":\"GCubeAnimation_front__PfolB\",\"back\":\"GCubeAnimation_back__3fsSo\",\"right\":\"GCubeAnimation_right__3mRkh\",\"left\":\"GCubeAnimation_left__Mm1x3\",\"top\":\"GCubeAnimation_top__3BP92\",\"bottom\":\"GCubeAnimation_bottom__1tROJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GTetrahedron\":\"GTetrahedron_GTetrahedron__2Y6SW\",\"side\":\"GTetrahedron_side__1i9D3\",\"front\":\"GTetrahedron_front__3gNUj\",\"right\":\"GTetrahedron_right__kdNCf\",\"left\":\"GTetrahedron_left__OONXt\",\"bottom\":\"GTetrahedron_bottom__1oYfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animation\":\"GTetrahedronAnimation_animation__1poMP\",\"front\":\"GTetrahedronAnimation_front__1nSTE\",\"right\":\"GTetrahedronAnimation_right__f701q\",\"left\":\"GTetrahedronAnimation_left__1FO4M\",\"bottom\":\"GTetrahedronAnimation_bottom__3eWIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UMenu_container\":\"UMenu_UMenu_container__35i38\",\"UMenu\":\"UMenu_UMenu__1LOBi\",\"item\":\"UMenu_item__j376U\",\"animationTrue\":\"UMenu_animationTrue__2Cjc-\"};","import React from 'react';\nimport classnames from 'classnames';\nimport c from './GCube.module.css'\nimport a from './GCubeAnimation.module.css'\n\nexport const GCube = ({ pageX, pageY, animation }) => {\n  return (\n    <div\n      className={c.GCube}\n      style={{ transform: `rotateX(${pageY}deg) rotateY(${pageX}deg)` }}\n    >\n      <div className={\n        classnames(c.side, c.front, a.animation, animation ? (a.front) : (null))\n      }>front</div>\n      <div className={\n        classnames(c.side, c.back, a.animation,animation ? (a.back) : (null))\n      }>back</div>\n      <div className={\n        classnames(c.side, c.right, a.animation, animation ? (a.right) : (null))\n      }>right</div>\n      <div className={\n        classnames(c.side, c.left, a.animation, animation ? (a.left) : (null))\n      }>left</div>\n      <div className={\n        classnames(c.side, c.top, a.animation, animation ? (a.top) : (null))\n      }>top</div>\n      <div className={\n        classnames(c.side, c.bottom, a.animation, animation ? (a.bottom) : (null))\n      }>bottom</div>\n    </div>\n  )\n}","import React from 'react';\nimport classnames from 'classnames';\nimport c from './GTetrahedron.module.css'\nimport a from './GTetrahedronAnimation.module.css'\n\nexport const GTetrahedron = ({pageX, pageY, animation}) => {\n    return (\n      <div\n        className={c.GTetrahedron}\n        style={{ transform: `rotateX(${pageY}deg) rotateY(${pageX}deg)` }}\n      >\n        <div className={\n          classnames(c.side, c.front, a.animation, animation ? (a.front) : (null))\n          }>front</div>\n        <div className={\n          classnames(c.side, c.right, a.animation, animation ? (a.right) : (null))\n          }>right</div>\n        <div className={\n          classnames(c.side, c.left, a.animation, animation ? (a.left) : (null))\n          }>left</div>\n        <div className={\n          classnames(c.side, c.bottom, a.animation, animation ? (a.bottom) : (null))\n          }>bottom</div>\n      </div>\n    )\n}","import React from 'react';\nimport classnames from 'classnames';\nimport c from './UMenu.module.css'\n\nexport const UMenu = ({\n  models,\n  onSelected,\n  onAnimateButtonPress,\n  animation\n}) => {\n  const items = models.map((item, i) =>\n    <div\n      onClick={() => onSelected(i)}\n      className={c.item}\n    >{item.lable}</div>\n  )\n  return (\n    <div className={c.UMenu_container}>\n      <div className={c.UMenu}>{items}</div>\n      <div className={c.settings}>\n        <div\n          onClick={() => onAnimateButtonPress()}\n          className={classnames(c.item, animation ? (c.animationTrue) : (null))}\n        >Animation</div>\n      </div>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { GCube, GTetrahedron } from './components/GObjects'\nimport { UMenu } from './components/uiKit'\nexport default class App extends Component {\n  state = {\n    key: false,\n    animation: false,\n    pageX: 0,\n    pageY: 0,\n    lastX: 0,\n    lastY: 0,\n    models: [\n      {\n        lable: \"Cube\",\n        display: true\n      },\n      {\n        lable: \"Tetrahedron\",\n        display: false\n      }\n    ]\n  }\n\n  componentDidMount() {\n    window.onmousemove = this._mouveCube\n    window.onmousedown = this._onKeyDown\n    window.onmouseup = this._onKeyUp\n  }\n\n  _onKeyDown = () => {\n    if (!this.state.key) this.setState({ key: true })\n  }\n  _onKeyUp = () => {\n    if (this.state.key) this.setState({ key: false })\n  }\n\n  _mouveCube = (e) => {\n    const { key, pageX, pageY, lastX, lastY } = this.state\n    if (key) {\n      this.setState({\n        pageX: lastX === e.pageX ?\n          (pageX) : (lastX > e.pageX ?\n            (pageX - 2) : (pageX + 2)),\n        pageY: lastY === e.pageY ?\n          (pageY) : (lastY > e.pageY ?\n            (pageY + 2) : (pageY - 2)),\n        lastX: e.pageX,\n        lastY: e.pageY,\n      })\n    }\n  }\n\n  _onModelSelected(id) {\n    this.setState({\n      models: this.state.models.map((item, i) => {\n        return {\n          lable: item.lable,\n          display: i === id ? (true) : (false)\n        }\n      }\n      )\n    })\n  }\n\n  _onAnimateButtonPress() {\n    this.setState({ animation: !this.state.animation })\n  }\n\n  render() {\n    const {\n      pageX,\n      pageY,\n      models,\n      animation\n    } = this.state\n    return (\n      <div className=\"App\">\n        <UMenu\n          onAnimateButtonPress={() => this._onAnimateButtonPress()}\n          animation={animation}\n          models={this.state.models}\n          onSelected={(id) => this._onModelSelected(id)}\n        />\n        <div className=\"container\">\n          {models[0].display &&\n            <GCube\n              pageX={pageX}\n              pageY={pageY}\n              animation={animation}\n            />\n          }\n          {models[1].display &&\n            <GTetrahedron\n              pageX={pageX}\n              pageY={pageY}\n              animation={animation}\n            />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}